{
	"info": {
		"_postman_id": "search-endpoints-addon",
		"name": "Admin Events - Endpoints de B√∫squeda (Addon)",
		"description": "Colecci√≥n adicional con los endpoints de b√∫squeda espec√≠ficos que complementan la colecci√≥n principal.\n\nüîç **Endpoints de B√∫squeda Incluidos:**\n- Buscar asistente por documento (tipo + n√∫mero)\n- Buscar asistentes por email\n\nüìã **Uso:**\n1. Primero ejecutar Login desde la colecci√≥n principal\n2. Usar estos endpoints para b√∫squedas espec√≠ficas\n3. Requiere autenticaci√≥n JWT y scope read:attendees\n\n**Base URL:** http://localhost:3000",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîç B√∫squedas Espec√≠ficas",
			"item": [
				{
					"name": "‚úÖ Buscar por Documento (DNI)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {",
									"    pm.expect([200, 404]).to.include(pm.response.code);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Attendee found with correct document\", function () {",
									"        const responseJson = pm.response.json();",
									"        pm.expect(responseJson).to.have.property(\"attendee_id\");",
									"        pm.expect(responseJson).to.have.property(\"document_type\");",
									"        pm.expect(responseJson).to.have.property(\"document_number\");",
									"        pm.expect(responseJson.document_type).to.eql(\"DNI\");",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendees/search/by-document/DNI/12345678",
							"host": ["{{base_url}}"],
							"path": ["attendees", "search", "by-document", "DNI", "12345678"]
						}
					},
					"response": []
				},
				{
					"name": "‚úÖ Buscar por Documento - Documento Creado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Attendee found with matching document\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property(\"attendee_id\");",
									"    pm.expect(responseJson.document_number).to.eql(pm.environment.get(\"unique_doc_number\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendees/search/by-document/DNI/{{unique_doc_number}}",
							"host": ["{{base_url}}"],
							"path": ["attendees", "search", "by-document", "DNI", "{{unique_doc_number}}"]
						}
					},
					"response": []
				},
				{
					"name": "‚ùå Buscar por Documento Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Not found message\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.detail).to.include(\"not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendees/search/by-document/DNI/99999999",
							"host": ["{{base_url}}"],
							"path": ["attendees", "search", "by-document", "DNI", "99999999"]
						}
					},
					"response": []
				},
				{
					"name": "‚úÖ Buscar por Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.be.an(\"array\");",
									"});",
									"",
									"pm.test(\"Found attendees have matching email pattern\", function () {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.length > 0) {",
									"        responseJson.forEach(attendee => {",
									"            pm.expect(attendee).to.have.property(\"email\");",
									"            pm.expect(attendee.email).to.include(\"test.com\");",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendees/search/by-email/test.com",
							"host": ["{{base_url}}"],
							"path": ["attendees", "search", "by-email", "test.com"]
						}
					},
					"response": []
				},
				{
					"name": "‚úÖ Buscar por Email Espec√≠fico - Email Creado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is array with at least one result\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.be.an(\"array\");",
									"    pm.expect(responseJson.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Found attendee has exact email match\", function () {",
									"    const responseJson = pm.response.json();",
									"    const expectedEmail = pm.environment.get(\"unique_email\");",
									"    const foundAttendee = responseJson.find(attendee => attendee.email === expectedEmail);",
									"    pm.expect(foundAttendee).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendees/search/by-email/{{unique_email}}",
							"host": ["{{base_url}}"],
							"path": ["attendees", "search", "by-email", "{{unique_email}}"]
						}
					},
					"response": []
				},
				{
					"name": "‚ùå Buscar Sin Autenticaci√≥n",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Authentication required error\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.detail).to.include(\"Not authenticated\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/attendees/search/by-document/DNI/12345678",
							"host": ["{{base_url}}"],
							"path": ["attendees", "search", "by-document", "DNI", "12345678"]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Verificar que las variables necesarias est√©n configuradas",
					"if (!pm.environment.get(\"base_url\")) {",
					"    pm.environment.set(\"base_url\", \"http://localhost:3000\");",
					"}",
					"",
					"if (!pm.environment.get(\"access_token\")) {",
					"    console.log(\"‚ö†Ô∏è Token de acceso no encontrado. Ejecuta primero el Login desde la colecci√≥n principal.\");",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Tests globales",
					"pm.test(\"Response time is reasonable\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test(\"Content-Type header is present\", function () {",
					"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.exist;",
					"});"
				]
			}
		}
	]
}
